<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mozss</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-03-28T02:32:03.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Mozss</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2023年</title>
    <link href="http://example.com/20230328fa88ee57/"/>
    <id>http://example.com/20230328fa88ee57/</id>
    <published>2023-03-28T02:32:03.000Z</published>
    <updated>2023-03-28T02:32:03.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2023-03"><a href="#2023-03" class="headerlink" title="2023-03"></a>2023-03</h3><p>ChatGPT的浪潮有点凶, 让我兴奋, 期待, 焦虑和紧张. </p><p>我预测未来ChatGPT应用的思路应该是: </p><ol><li>ChatGPT+需要聊天陪护的场景</li><li>GPT生成式预训练模型+特定业务操作场景</li><li>诞生MaaS模型即服务的商业软件公司</li></ol><h3 id="2023-04"><a href="#2023-04" class="headerlink" title="2023-04"></a>2023-04</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;2023-03&quot;&gt;&lt;a href=&quot;#2023-03&quot; class=&quot;headerlink&quot; title=&quot;2023-03&quot;&gt;&lt;/a&gt;2023-03&lt;/h3&gt;&lt;p&gt;ChatGPT的浪潮有点凶, 让我兴奋, 期待, 焦虑和紧张. &lt;/p&gt;
&lt;p&gt;我预测未来ChatG</summary>
      
    
    
    
    <category term="且活且珍惜" scheme="http://example.com/categories/%E4%B8%94%E6%B4%BB%E4%B8%94%E7%8F%8D%E6%83%9C/"/>
    
    <category term="记录" scheme="http://example.com/categories/%E4%B8%94%E6%B4%BB%E4%B8%94%E7%8F%8D%E6%83%9C/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="记录" scheme="http://example.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Istio的实践</title>
    <link href="http://example.com/2023011162876/"/>
    <id>http://example.com/2023011162876/</id>
    <published>2023-01-10T17:16:25.000Z</published>
    <updated>2023-01-10T17:16:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imgse.com/i/ppnXhCQ"><img src="https://s1.ax1x.com/2023/03/10/ppnXhCQ.png" alt="ppnXhCQ.png"></a></p><span id="more"></span><h1 id="Istio落地实践"><a href="#Istio落地实践" class="headerlink" title="Istio落地实践"></a>Istio落地实践</h1><p>Istio是一个基于Service Mesh的开源项目，旨在通过解决微服务架构中的网络问题和安全问题，简化微服务的运维。本文将介绍如何在Java应用中使用Istio。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>在开始之前，需要准备以下环境：</p><ul><li>Kubernetes集群</li><li>Istio安装包</li><li>Java应用</li></ul><p>这里我们以minikube部署Kubernetes集群为例，使用以下命令安装Istio：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istioctl manifest apply --set profile=demo</span><br></pre></td></tr></table></figure><h2 id="配置Istio注入"><a href="#配置Istio注入" class="headerlink" title="配置Istio注入"></a>配置Istio注入</h2><p>要在Java应用中使用Istio，需要将Istio的Envoy Sidecar注入到应用容器中。可以通过以下命令对应用容器进行Istio注入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f &lt;(istioctl kube-inject -f /path/to/deployment.yaml)</span><br></pre></td></tr></table></figure><p>其中，<code>deployment.yaml</code>是Java应用的部署文件，通过<code>kube-inject</code>命令将会生成一个新的yaml文件，包含了注入Istio Sidecar的配置信息。</p><h2 id="使用Istio实现服务发现和负载均衡"><a href="#使用Istio实现服务发现和负载均衡" class="headerlink" title="使用Istio实现服务发现和负载均衡"></a>使用Istio实现服务发现和负载均衡</h2><p>在Istio中，可以通过配置VirtualService和DestinationRule实现服务发现和负载均衡。例如，以下是一个简单的VirtualService配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">my-app</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">route:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">destination:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">my-app</span></span><br><span class="line">        <span class="attr">port:</span></span><br><span class="line">          <span class="attr">number:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><p>该配置指定了一个名称为<code>my-app</code>的VirtualService，它将请求转发到名称为<code>my-app</code>的后端服务，端口号为8080。</p><p>同时，可以通过配置DestinationRule实现负载均衡。例如，以下是一个简单的DestinationRule配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">my-app</span></span><br><span class="line">  <span class="attr">trafficPolicy:</span></span><br><span class="line">    <span class="attr">loadBalancer:</span></span><br><span class="line">      <span class="attr">simple:</span> <span class="string">RANDOM</span></span><br></pre></td></tr></table></figure><p>该配置指定了一个名称为<code>my-app</code>的DestinationRule，它使用随机负载均衡方式。</p><h2 id="使用Istio实现流量管理"><a href="#使用Istio实现流量管理" class="headerlink" title="使用Istio实现流量管理"></a>使用Istio实现流量管理</h2><p>在Istio中，可以通过配置VirtualService的route实现流量管理，例如可以将请求发送到特定的版本。</p><p>以下是一个简单的VirtualService配置，它将60%的请求发送到<code>v1</code>版本，40%的请求发送到<code>v2</code>版本：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">my-app</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">route:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">destination:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">my-app</span></span><br><span class="line">        <span class="attr">port:</span></span><br><span class="line">          <span class="attr">number:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">weight:</span> <span class="number">60</span></span><br><span class="line">      <span class="attr">subset:</span> <span class="string">v1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">destination:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">my-app</span></span><br><span class="line">        <span class="attr">port:</span></span><br><span class="line">          <span class="attr">number:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">weight:</span> <span class="number">40</span></span><br><span class="line">      <span class="attr">subset:</span> <span class="string">v2</span></span><br><span class="line"> <span class="string">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">my-app</span></span><br><span class="line">  <span class="attr">subsets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">v1</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">my-app</span></span><br><span class="line">      <span class="attr">version:</span> <span class="string">v1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">v2</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">my-app</span></span><br><span class="line">      <span class="attr">version:</span> <span class="string">v2</span></span><br></pre></td></tr></table></figure><h2 id="使用Istio实现流量拦截和重试"><a href="#使用Istio实现流量拦截和重试" class="headerlink" title="使用Istio实现流量拦截和重试"></a>使用Istio实现流量拦截和重试</h2><p>在Istio中，可以通过配置VirtualService的route实现流量拦截和重试。例如，以下是一个拦截请求的配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">my-app</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">headers:</span></span><br><span class="line">        <span class="attr">x-myservice-requires-auth:</span></span><br><span class="line">          <span class="attr">exact:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">fault:</span></span><br><span class="line">      <span class="attr">abort:</span></span><br><span class="line">        <span class="attr">status:</span> <span class="number">401</span></span><br><span class="line">      <span class="attr">delay:</span></span><br><span class="line">        <span class="attr">percent:</span> <span class="number">50</span></span><br><span class="line">        <span class="attr">fixedDelay:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">route:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">destination:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">my-app</span></span><br><span class="line">        <span class="attr">port:</span></span><br><span class="line">          <span class="attr">number:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><p>该配置指定了一个匹配规则，如果请求中的<code>x-myservice-requires-auth</code>头部是<code>true</code>，则拦截请求并返回401错误，同时在50%的请求上延迟5秒。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文介绍了如何在Java应用中使用Istio实现服务发现、负载均衡、流量管理、流量拦截和重试等功能。通过Istio，可以有效地解决微服务架构中的网络问题和安全问题，简化微服务的运维工作。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://imgse.com/i/ppnXhCQ&quot;&gt;&lt;img src=&quot;https://s1.ax1x.com/2023/03/10/ppnXhCQ.png&quot; alt=&quot;ppnXhCQ.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="code" scheme="http://example.com/categories/code/"/>
    
    <category term="code-golang" scheme="http://example.com/categories/code/code-golang/"/>
    
    
    <category term="istioi" scheme="http://example.com/tags/istioi/"/>
    
  </entry>
  
  <entry>
    <title>Istioi相关概念</title>
    <link href="http://example.com/2023010162876/"/>
    <id>http://example.com/2023010162876/</id>
    <published>2022-12-31T17:16:20.000Z</published>
    <updated>2022-12-31T17:16:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imgse.com/i/ppnX2E8"><img src="https://s1.ax1x.com/2023/03/10/ppnX2E8.png" alt="ppnX2E8.png"></a></p><span id="more"></span><h1 id="Istio：一个现代化的服务网格平台"><a href="#Istio：一个现代化的服务网格平台" class="headerlink" title="Istio：一个现代化的服务网格平台"></a>Istio：一个现代化的服务网格平台</h1><p><img src="https://istio.io/latest/img/istio-whitelogo-bluebackground-unframed.svg" alt="Istio Logo"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://istio.io/">Istio</a>是一个开源的服务网格平台，旨在解决现代云端软件应用程序的网络和安全问题。它为服务之间的通信提供了一种透明的方式，并提供了全面的流量管理、安全、性能和可观察性功能。</p><p>Istio是一个跨平台、可扩展、易于部署的服务网格，支持多种场景和部署模式。它可以与Kubernetes、Consul、Nomad等容器编排和服务发现工具无缝集成，支持多种语言和框架，如Java、Golang、Node.js和Spring Boot等。</p><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><p>Istio包括以下核心概念：</p><ul><li><strong>服务：</strong> 一个服务代表了一个应用程序或一组应用程序，它可以由多个实例组成，通常会被多个客户端调用。</li><li><strong>代理：</strong> 一个代理是Istio控制平面中的一个组件，它负责拦截服务之间的请求和响应，以实现流量控制、安全和监控等功能。Istio支持两种代理：Envoy和Istiod。Envoy是一个高性能的C++代理，它可以直接部署在Kubernetes Pod中；Istiod是一个Go实现的Istio管控面的一部分。</li><li><strong>控制平面：</strong> 控制平面负责Istio的规则和配置管理等工作，它包含了Istiod、Pilot、Citadel和Galley等组件。</li><li><strong>数据平面：</strong> 数据平面负责处理Istio路由代理的流量和指令，它包含了Envoy和Istiod等代理。</li></ul><h2 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h2><p>Istio提供了以下核心功能：</p><h3 id="流量控制"><a href="#流量控制" class="headerlink" title="流量控制"></a>流量控制</h3><p>Istio可以使用基于规则的方式控制服务之间的流量流向、路由和负载均衡等行为，从而实现A/B测试、蓝绿部署、金丝雀发布等现代化的部署模式。</p><h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><p>Istio提供了一个安全的服务之间通信的解决方案，并支持细粒度的访问控制、服务认证和传输层安全等功能。这使得开发人员可以专注于业务逻辑而不必考虑安全性问题。</p><h3 id="可观察性"><a href="#可观察性" class="headerlink" title="可观察性"></a>可观察性</h3><p>Istio提供了全面的监控、跟踪和日志记录功能，使得开发人员可以了解服务之间的交互、性能和问题。</p><h3 id="服务治理"><a href="#服务治理" class="headerlink" title="服务治理"></a>服务治理</h3><p>Istio提供了服务注册、发现、负载均衡和故障恢复等服务治理功能，从而使得开发人员可以轻松管理分布式服务架构。</p><h2 id="安装与部署"><a href="#安装与部署" class="headerlink" title="安装与部署"></a>安装与部署</h2><p>Istio可以在多种部署环境中运行，例如Kubernetes、Nomad、Consul等。Istio提供了多种安装方式，例如Istio Operator、Helm Chart、istioctl等。安装Istio可以参考<a href="https://istio.io/latest/docs/setup/getting-started/">Istio官方文档</a>。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>服务网格是一种现代化的微服务架构，它可以解决多个服务之间的通信、安全和监控等问题。Istio是一个开源的服务网格平台，可以帮助开发人员和运维人员轻松构建和管理分布式系统。Istio提供了全面的流量管理、安全、性能和可观察性功能，可以在多种部署环境中运行，是一种非常实用的微服务架构。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://imgse.com/i/ppnX2E8&quot;&gt;&lt;img src=&quot;https://s1.ax1x.com/2023/03/10/ppnX2E8.png&quot; alt=&quot;ppnX2E8.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="code" scheme="http://example.com/categories/code/"/>
    
    <category term="code-golang" scheme="http://example.com/categories/code/code-golang/"/>
    
    
    <category term="istioi" scheme="http://example.com/tags/istioi/"/>
    
  </entry>
  
  <entry>
    <title>2022年</title>
    <link href="http://example.com/202212276153aaf4/"/>
    <id>http://example.com/202212276153aaf4/</id>
    <published>2022-12-27T04:22:30.000Z</published>
    <updated>2022-12-27T04:22:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2022"><a href="#2022" class="headerlink" title="2022"></a>2022</h2><p>衣带渐宽终不悔…<br>(PS: 2022末, 未阳, 疫情终于要走了!!!)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2022&quot;&gt;&lt;a href=&quot;#2022&quot; class=&quot;headerlink&quot; title=&quot;2022&quot;&gt;&lt;/a&gt;2022&lt;/h2&gt;&lt;p&gt;衣带渐宽终不悔…&lt;br&gt;(PS: 2022末, 未阳, 疫情终于要走了!!!)&lt;/p&gt;
</summary>
      
    
    
    
    <category term="且活且珍惜" scheme="http://example.com/categories/%E4%B8%94%E6%B4%BB%E4%B8%94%E7%8F%8D%E6%83%9C/"/>
    
    <category term="总结" scheme="http://example.com/categories/%E4%B8%94%E6%B4%BB%E4%B8%94%E7%8F%8D%E6%83%9C/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="年终总结" scheme="http://example.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes的实践</title>
    <link href="http://example.com/2022112162876/"/>
    <id>http://example.com/2022112162876/</id>
    <published>2022-11-20T17:16:29.000Z</published>
    <updated>2022-11-20T17:16:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imgse.com/i/ppnXRUS"><img src="https://s1.ax1x.com/2023/03/10/ppnXRUS.png" alt="ppnXRUS.png"></a></p><span id="more"></span><h1 id="Kubernetes落地实践"><a href="#Kubernetes落地实践" class="headerlink" title="Kubernetes落地实践"></a>Kubernetes落地实践</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Kubernetes 是一款开源的容器编排和管理工具，可以帮助我们更高效地管理云原生环境中的容器应用。在本文中，我们将介绍如何将 Kubernetes 应用于真实的生产环境中，并展示具体的实践经验。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在开始使用 Kubernetes 之前，需要先完成以下准备工作：</p><ol><li>部署 Kubernetes 集群：可以使用 Kubespray、Kops、Minikube 等工具来快速部署 Kubernetes 集群；</li><li>部署容器镜像仓库：可以使用 Docker Registry 或者 Harbor 等容器镜像仓库来存储和管理镜像；</li><li>部署监控和日志工具：可以使用 Prometheus、Grafana、ELK 等工具来监控容器的状态和收集日志。</li></ol><h2 id="实践案例"><a href="#实践案例" class="headerlink" title="实践案例"></a>实践案例</h2><h3 id="部署-Spring-Boot-应用"><a href="#部署-Spring-Boot-应用" class="headerlink" title="部署 Spring Boot 应用"></a>部署 Spring Boot 应用</h3><p>假设我们已经有一个简单的 Spring Boot 应用，需要将它部署到 Kubernetes 集群中。以下是具体的步骤：</p><ol><li>将应用打包成容器镜像，并上传到镜像仓库中：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编写Dockerfile</span></span><br><span class="line">FROM openjdk:8-jdk-alpine</span><br><span class="line">COPY target/demo-0.0.1-SNAPSHOT.jar /app.jar</span><br><span class="line">ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;/app.jar&quot;]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 打包镜像</span></span><br><span class="line">docker build -t &lt;image_name&gt;:&lt;tag&gt; .</span><br><span class="line"><span class="meta">#</span><span class="bash"> 上传镜像</span></span><br><span class="line">docker push &lt;image_name&gt;:&lt;tag&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写 Kubernetes 配置文件（deployment.yml）：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">demo</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">demo</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">demo</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&lt;image_name&gt;:&lt;tag&gt;</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><ol start="3"><li>应用 Kubernetes 配置文件：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f deployment.yml</span><br></pre></td></tr></table></figure><h3 id="部署分布式应用"><a href="#部署分布式应用" class="headerlink" title="部署分布式应用"></a>部署分布式应用</h3><p>假设我们需要部署一个分布式应用，包含多个微服务，这些微服务需要相互调用。以下是具体的步骤：</p><ol><li>使用 Kubernetes 部署 Redis，用于服务之间的数据共享：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">6379</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span> [ <span class="string">&quot;ReadWriteOnce&quot;</span> ]</span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">1Gi</span></span><br></pre></td></tr></table></figure><ol start="2"><li>部署服务网关（使用 Istio）：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Gateway</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gateway</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">istio:</span> <span class="string">ingressgateway</span></span><br><span class="line">  <span class="attr">servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span></span><br><span class="line">      <span class="attr">number:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">HTTP</span></span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;*&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">  <span class="attr">gateways:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">gateway</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">route:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">destination:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">api-service</span></span><br><span class="line">        <span class="attr">port:</span></span><br><span class="line">          <span class="attr">number:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">weight:</span> <span class="number">100</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">api-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">api-service</span></span><br><span class="line">  <span class="attr">trafficPolicy:</span></span><br><span class="line">    <span class="attr">loadBalancer:</span></span><br><span class="line">      <span class="attr">consistentHash:</span></span><br><span class="line">        <span class="attr">httpHeaderName:</span> <span class="string">&quot;x-correlation-id&quot;</span></span><br><span class="line">        <span class="attr">httpCookie:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">&quot;X-Correlation-ID&quot;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>部署微服务之间的通信：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">api</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">api</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">api</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">api</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&lt;image_name&gt;:&lt;tag&gt;</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">REDIS_HOST</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">redis.default.svc.cluster.local</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">REDIS_PORT</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">&quot;6379&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">REDIS_PASSWORD</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">secretKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">redis-secret</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">password</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">api-service</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">api</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">api</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><p>在上述配置中，我们使用了 Istio 进行服务网关和流量控制，并使用 Redis 存储微服务之间的数据。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在实际的生产环境中，Kubernetes 可以帮助我们更高效地管理容器应用，并提供了丰富的功能和插件，例如服务发现、负载均衡、故障恢复、流量控制等。在使用 Kubernetes 之前，需要做好充分的准备工作，并根据实际的情况进行设计和优化。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://imgse.com/i/ppnXRUS&quot;&gt;&lt;img src=&quot;https://s1.ax1x.com/2023/03/10/ppnXRUS.png&quot; alt=&quot;ppnXRUS.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="code" scheme="http://example.com/categories/code/"/>
    
    <category term="code-golang" scheme="http://example.com/categories/code/code-golang/"/>
    
    
    <category term="kubernetes" scheme="http://example.com/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes的架构特点</title>
    <link href="http://example.com/2022111362876/"/>
    <id>http://example.com/2022111362876/</id>
    <published>2022-11-12T17:16:17.000Z</published>
    <updated>2022-11-12T17:16:17.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imgse.com/i/ppnXyut"><img src="https://s1.ax1x.com/2023/03/10/ppnXyut.png" alt="ppnXyut.png"></a></p><span id="more"></span><h1 id="Kubernetes架构特点"><a href="#Kubernetes架构特点" class="headerlink" title="Kubernetes架构特点"></a>Kubernetes架构特点</h1><p>Kubernetes是一个开源的容器编排和管理平台。它的架构设计灵活，可扩展性强，是现代云原生环境下非常受欢迎的技术。</p><h2 id="架构概述"><a href="#架构概述" class="headerlink" title="架构概述"></a>架构概述</h2><p>Kubernetes的架构包含以下几个核心组件：</p><ul><li>API Server</li><li>etcd</li><li>kubelet</li><li>kube-proxy</li><li>控制器管理器</li><li>调度器</li></ul><p>其中，API Server是整个Kubernetes系统的核心，用于对外提供REST API服务，所有其他组件都通过访问API Server来对集群资源进行管理。</p><p>etcd是Kubernetes的数据存储（datastore）组件，用于存储集群的配置信息和状态信息。Kubernetes的API对象都存储在etcd中。</p><p>kubelet是每个节点上运行的代理程序，用于管理节点上的容器和镜像。它通过和API Server交互，获取需要在本节点上运行的Pod和容器信息，并通过CRI（Container Runtime Interface）与容器运行时（如Docker）进行交互。</p><p>kube-proxy是Kubernetes集群中的网络代理组件，它负责实现集群内Service和Pod的网络通信。</p><p>控制器管理器是Kubernetes集群中的核心组件之一，它包含了多个控制器，如Replication Controller、Deployment Controller等，用于确保集群中的Pod数量和状态达到期望值。</p><p>在Kubernetes中，Pod是最小的部署单位，它包含了一个或多个容器，并共享同一组网络和存储资源。通过调度器将Pod绑定到节点上，从而实现Pod的部署和管理。</p><h2 id="架构特点"><a href="#架构特点" class="headerlink" title="架构特点"></a>架构特点</h2><p>Kubernetes的架构设计具有以下几个特点：</p><ul><li>分布式架构：Kubernetes的组件可分布在多个节点上，通过etcd进行信息交互和状态同步。这种设计使得Kubernetes具有良好的可扩展性和高可用性。</li><li>服务抽象层：Kubernetes通过Service抽象层对底层网络进行了封装，使得集群内的应用可以彼此访问，而无需考虑底层网络拓扑和IP地址变化等问题。</li><li>软件定义：Kubernetes通过API对象的方式来描述集群资源和状态，提供了灵活的编程接口和丰富的扩展机制，使得开发者可以方便地管理集群中的应用。</li><li>弹性伸缩：Kubernetes支持水平扩展和收缩应用，通过控制器和调度器确保集群状态和需求的一致性。这种机制可以提供高效的资源利用和快速的应用弹性伸缩。</li><li>开放性和生态：Kubernetes是一个开源的项目，具有活跃的社区和庞大的生态系统，可以和各种云计算和容器技术集成，从而满足不同场景下的需求。</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>Kubernetes的架构设计使得它能够轻松地管理云原生应用，并具有高可用性、弹性伸缩、软件定义等特点。随着云原生应用的快速发展，Kubernetes已成为不可或缺的技术之一，它将引领应用容器的未来发展。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://imgse.com/i/ppnXyut&quot;&gt;&lt;img src=&quot;https://s1.ax1x.com/2023/03/10/ppnXyut.png&quot; alt=&quot;ppnXyut.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="code" scheme="http://example.com/categories/code/"/>
    
    <category term="code-golang" scheme="http://example.com/categories/code/code-golang/"/>
    
    
    <category term="kubernetes" scheme="http://example.com/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes的相关概念</title>
    <link href="http://example.com/2022100162876/"/>
    <id>http://example.com/2022100162876/</id>
    <published>2022-09-30T17:16:36.000Z</published>
    <updated>2022-09-30T17:16:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imgse.com/i/ppnX6DP"><img src="https://s1.ax1x.com/2023/03/10/ppnX6DP.png" alt="ppnX6DP.png"></a></p><span id="more"></span><h1 id="Kubernetes-相关概念"><a href="#Kubernetes-相关概念" class="headerlink" title="Kubernetes 相关概念"></a>Kubernetes 相关概念</h1><p>Kubernetes 是一个开源的容器编排平台，用于自动化部署、扩展和管理容器化应用程序。在学习 Kubernetes 之前，我们需要先了解一下以下几个概念：</p><h2 id="1-Pod"><a href="#1-Pod" class="headerlink" title="1. Pod"></a>1. Pod</h2><p>Pod 是 Kubernetes 中最小的部署单元。通常情况下，一个 Pod 包含一个或多个容器，Pod 中所有容器都共享同一个网络命名空间、IP 地址和存储卷。Pod 提供了一种独立于主机的抽象，使得应用程序可以被部署在任意一个节点上。</p><p>以下是一个 Pod 的定义文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-app-container</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">my-app-image</span></span><br><span class="line">      <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h2 id="2-Service"><a href="#2-Service" class="headerlink" title="2. Service"></a>2. Service</h2><p>Service 是 Kubernetes 中用于暴露应用程序的一种机制。可以将多个 Pod 组织在一个 Service 中，Service 会负责将请求路由到这些 Pod 中任意一个。Service 可以通过 Cluster IP、NodePort、LoadBalancer 等模式进行访问。</p><p>以下是一个 Service 的定义文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-app-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">my-app</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br></pre></td></tr></table></figure><h2 id="3-ReplicaSet"><a href="#3-ReplicaSet" class="headerlink" title="3. ReplicaSet"></a>3. ReplicaSet</h2><p>ReplicaSet 是 Kubernetes 中用于管理 Pod 副本数的一种机制。可以通过 ReplicaSet 来指定需要创建多少个 Pod 副本。如果有任何一个 Pod 发生故障，ReplicaSet 会自动启动一个新的 Pod 来替代它。</p><p>以下是一个 ReplicaSet 的定义文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ReplicaSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-app-replicaset</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">my-app</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">my-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-app-container</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">my-app-image</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h2 id="4-Deployment"><a href="#4-Deployment" class="headerlink" title="4. Deployment"></a>4. Deployment</h2><p>Deployment 是 Kubernetes 中用于管理应用程序部署的一种机制。可以通过 Deployment 来指定需要创建多少个 ReplicaSet，Deployment 会自动创建并管理这些 ReplicaSet。Deployment 还提供了回滚、滚动升级等功能。</p><p>以下是一个 Deployment 的定义文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-app-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">my-app</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">my-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-app-container</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">my-app-image</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h2 id="5-Namespace"><a href="#5-Namespace" class="headerlink" title="5. Namespace"></a>5. Namespace</h2><p>Namespace 是 Kubernetes 中用于对资源进行隔离和管理的一种机制。可以将不同的资源划分到不同的 Namespace 中，隔离它们的使用者和环境。可以通过 Namespace 来划分不同的环境（如开发、测试、生产）。</p><p>以下是一个 Namespace 的定义文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-namespace</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Kubernetes 中包含了多种概念和机制，本文介绍了其中的五个核心概念：Pod、Service、ReplicaSet、Deployment 和 Namespace。在实际使用 Kubernetes 进行应用程序部署和管理时，需要深入理解这些概念，才能发挥 Kubernetes 最大的价值。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://imgse.com/i/ppnX6DP&quot;&gt;&lt;img src=&quot;https://s1.ax1x.com/2023/03/10/ppnX6DP.png&quot; alt=&quot;ppnX6DP.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="code" scheme="http://example.com/categories/code/"/>
    
    <category term="code-golang" scheme="http://example.com/categories/code/code-golang/"/>
    
    
    <category term="kubernetes" scheme="http://example.com/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>如何学习法语</title>
    <link href="http://example.com/2022070216e5a472/"/>
    <id>http://example.com/2022070216e5a472/</id>
    <published>2022-07-02T14:16:22.000Z</published>
    <updated>2022-07-02T14:16:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imgtu.com/i/jTaLK1"><img src="https://s1.ax1x.com/2022/07/19/jTaLK1.jpg" alt="jTaLK1.jpg"></a></p><span id="more"></span><p>Je vais bien apprendre Français et ensuite aller en Afrique pour jeter un coup d’œil.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://imgtu.com/i/jTaLK1&quot;&gt;&lt;img src=&quot;https://s1.ax1x.com/2022/07/19/jTaLK1.jpg&quot; alt=&quot;jTaLK1.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="lang" scheme="http://example.com/categories/lang/"/>
    
    <category term="lang-fr" scheme="http://example.com/categories/lang/lang-fr/"/>
    
    
    <category term="法语" scheme="http://example.com/tags/%E6%B3%95%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>Golang vs Java</title>
    <link href="http://example.com/2022062162876/"/>
    <id>http://example.com/2022062162876/</id>
    <published>2022-06-20T17:16:38.000Z</published>
    <updated>2022-06-20T17:16:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imgse.com/i/ppnX43j"><img src="https://s1.ax1x.com/2023/03/10/ppnX43j.png" alt="ppnX43j.png"></a></p><span id="more"></span><h1 id="Golang-vs-Java-谁才是程序员的选择？"><a href="#Golang-vs-Java-谁才是程序员的选择？" class="headerlink" title="Golang vs Java: 谁才是程序员的选择？"></a>Golang vs Java: 谁才是程序员的选择？</h1><p>现代编程领域中，压轴的两种语言无疑是 Go 和 Java。虽然两者都有着自己的优缺点，但在选择一种最合适的语言时，如何决定呢？本篇文章将对 Golang 和 Java 进行比较，旨在帮助程序员选择自己最喜欢的语言。</p><h2 id="适用领域"><a href="#适用领域" class="headerlink" title="适用领域"></a>适用领域</h2><p>首先，我们来看一下两种语言适用的领域。</p><p>Golang 是 Google 开发的静态类型语言，受到了 C 和 Python 的启发。它适用于并发和分布式系统，因为它有着轻量级的线程（称为 goroutines）和基于 Channel 的通信机制。此外，Golang 的性能和封装特性也是其一大优势。</p><p>相对应的，Java 是一门广泛应用的语言，它是一门面向对象、跨平台的语言。Java 的优点是它拥有强大的库和生态系统，它的应用场景广泛且易于开发。</p><h2 id="语法比较"><a href="#语法比较" class="headerlink" title="语法比较"></a>语法比较</h2><p>语法方面，两种语言都有各自的特点。</p><p>Golang 的语法非常简单明了，它没有类和继承的概念，但它有一个更加简单的 interface 概念。Golang 的结构也更加轻量级，这使得它在处理大量数据时比 Java 更快。</p><p>相反，Java 的语法相对复杂一些，但也更规范化。它的类和继承概念更加清晰，这对于大型项目十分重要。Java 的面向对象特性也使得它在一些特定领域的开发中更有优势。</p><h2 id="性能对比"><a href="#性能对比" class="headerlink" title="性能对比"></a>性能对比</h2><p>性能一直是程序员关注的热点问题。</p><p>Golang 的并发执行和内存管理机制使其能够有效地处理大型程序。这也是为什么 Golang 被用于 Google 内部的大型项目，例如 Kubernetes 和 Docker 等项目。Golang 通过使并发执行变得容易来提高程序性能。</p><p>然而，Java 也有很好的优化性能选项。Java 的 JIT 编译器能够将代码动态解释并提高执行效率，结果是 Java 的应用程序不仅能够在桌面上执行，而且能够处理许多大型任务。</p><h2 id="生态系统"><a href="#生态系统" class="headerlink" title="生态系统"></a>生态系统</h2><p>当然，技术生态系统也是程序员非常关心的问题。</p><p>Golang 的生态系统相对较新，但也发展得非常活跃。Golang 有许多优秀的库和框架，例如 Gin 和 Echo 等。它的社区也非常活跃，有越来越多的人使用 Golang 进行开发。</p><p>然而，Java 的生态系统更加成熟和庞大。Java 的生态系统种类繁多，包括几乎所有现代编程领域的库和框架。Java 的生态系统已经极具规模，许多企业级应用程序选择的就是 Java。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>到底哪个更好，Golang 还是 Java？</p><p>答案是取决于你的项目，应用程序以及经验。Java 是一门成熟、广泛使用的语言，但 Golang 则是一个更轻便、更快速的语言，适用于那些对并发和分布式系统的处理要求更高的开发人员。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://imgse.com/i/ppnX43j&quot;&gt;&lt;img src=&quot;https://s1.ax1x.com/2023/03/10/ppnX43j.png&quot; alt=&quot;ppnX43j.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="code" scheme="http://example.com/categories/code/"/>
    
    <category term="code-golang" scheme="http://example.com/categories/code/code-golang/"/>
    
    
    <category term="golang" scheme="http://example.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>golang避坑</title>
    <link href="http://example.com/2022061562876/"/>
    <id>http://example.com/2022061562876/</id>
    <published>2022-06-14T17:16:48.000Z</published>
    <updated>2022-06-14T17:16:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imgse.com/i/ppnX5gs"><img src="https://s1.ax1x.com/2023/03/10/ppnX5gs.png" alt="ppnX5gs.png"></a></p><span id="more"></span><h2 id="1-不要使用多个初始化函数"><a href="#1-不要使用多个初始化函数" class="headerlink" title="1. 不要使用多个初始化函数"></a>1. 不要使用多个初始化函数</h2><p>一些初学者会喜欢使用多个初始化函数，比如init1、init2等等，这是不好的写法。因为这些函数执行顺序并不是很明确，可能会导致依赖问题，因此推荐只使用一个init函数来进行初始化。</p><h2 id="2-不要忘记检查返回值"><a href="#2-不要忘记检查返回值" class="headerlink" title="2. 不要忘记检查返回值"></a>2. 不要忘记检查返回值</h2><p>使用golang必须要克服的一种毛病就是忘记检查返回值。这很危险，错误会悄悄地发生，并且不容易被发现。所以，对于所有的函数，都要检查其返回值，即使它只是一个简单的调用。</p><h2 id="3-不要使用未初始化的变量"><a href="#3-不要使用未初始化的变量" class="headerlink" title="3. 不要使用未初始化的变量"></a>3. 不要使用未初始化的变量</h2><p>如果你尝试使用一个未初始化的变量，则会引发一些意想不到的问题。因此，要养成好习惯，一定要先初始化变量，然后再使用它们。</p><h2 id="4-不要在循环中使用defer"><a href="#4-不要在循环中使用defer" class="headerlink" title="4. 不要在循环中使用defer"></a>4. 不要在循环中使用defer</h2><p>如果你在循环中使用了defer，那么每次循环都会创建一个新的defer函数。这将会浪费大量内存，并可能导致你的程序异常崩溃。因此，在制定带defer函数的程序时，请确保其在循环之外。</p><h2 id="5-不要犯使用指针的错误"><a href="#5-不要犯使用指针的错误" class="headerlink" title="5. 不要犯使用指针的错误"></a>5. 不要犯使用指针的错误</h2><p>这个问题可能在golang的初学者中非常普遍。请记住，如果您使用了指针，那么您应该始终检查它是否为nil。否则，您的代码可能会因为空指针而崩溃。所以，请务必学会在代码中正确地使用指针。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://imgse.com/i/ppnX5gs&quot;&gt;&lt;img src=&quot;https://s1.ax1x.com/2023/03/10/ppnX5gs.png&quot; alt=&quot;ppnX5gs.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="code" scheme="http://example.com/categories/code/"/>
    
    <category term="code-golang" scheme="http://example.com/categories/code/code-golang/"/>
    
    
    <category term="golang" scheme="http://example.com/tags/golang/"/>
    
  </entry>
  
</feed>
